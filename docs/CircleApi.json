{
  "openapi": "3.0.2",
  "info": {
    "title": "Circle Api",
    "description": "Circle App Social Media Website Api",
    "version": "1.0.0",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    },
    "contact": {
      "name": "Abdurrahman Harits",
      "email": "abdmanharits@email.com"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "http://localhost:5000/api/v1"
    }
  ],
  "paths": {
    "/auth/sign-in": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sign in",
        "description": "Sign in to your account.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "confirmPassword"],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "description": "Should be the same as password"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "confirmPassword"],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "description": "Should be the same as password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully sign in to your account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "Sample Token"
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully sign in to your account."
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Credentials."
                    },
                    "name": {
                      "type": "string",
                      "example": "RequestError"
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "\"confirmPassword\" and \"password\" must be equals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "\"confirmPassword\" and \"password\" must be equals"
                    },
                    "name": {
                      "type": "string",
                      "example": "ValidationError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "\"confirmPassword\" and \"password\" must be equals"
                          },
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ["body", "confirmPassword"]
                          },
                          "type": {
                            "type": "string",
                            "example": "any.only"
                          },
                          "context": {
                            "type": "object",
                            "properties": {
                              "valids": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "adjust": {
                                      "type": "null"
                                    },
                                    "in": {
                                      "type": "boolean"
                                    },
                                    "iterables": {
                                      "type": "null"
                                    },
                                    "map": {
                                      "type": "null"
                                    },
                                    "separator": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "ancestor": {
                                      "type": "integer"
                                    },
                                    "path": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "depth": {
                                      "type": "integer"
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "root": {
                                      "type": "string"
                                    },
                                    "display": {
                                      "type": "string"
                                    }
                                  },
                                  "example": {
                                    "adjust": null,
                                    "in": false,
                                    "iterables": null,
                                    "map": null,
                                    "separator": ".",
                                    "type": "value",
                                    "ancestor": 1,
                                    "path": ["password"],
                                    "depth": 1,
                                    "key": "password",
                                    "root": "password",
                                    "display": "ref:password"
                                  }
                                }
                              },
                              "label": {
                                "type": "string",
                                "example": "body.confirmPassword"
                              },
                              "value": {
                                "type": "string",
                                "example": "12345678"
                              },
                              "key": {
                                "type": "string",
                                "example": "confirmPassword"
                              }
                            }
                          }
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 429
                    },
                    "message": {
                      "type": "string",
                      "example": "Too many failed sign-in attempts from this device. Please wait for 30 minutes before trying again."
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-up": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sign up",
        "description": "Sign up for a new account.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firstName",
                  "email",
                  "username",
                  "password",
                  "confirmPassword"
                ],
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "description": "Should be the same as password"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "firstName",
                  "email",
                  "username",
                  "password",
                  "confirmPassword"
                ],
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "description": "Should be the same as password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account successfully registered.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "sample token"
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Account successfully registered."
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email already taken.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already taken."
                    },
                    "name": {
                      "type": "string",
                      "example": "RequestError"
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "\"body.username\" is required"
                    },
                    "name": {
                      "type": "string",
                      "example": "ValidationError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "\"body.username\" is required"
                          },
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ["body", "username"]
                          },
                          "type": {
                            "type": "string",
                            "example": "any.required"
                          },
                          "context": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string",
                                "example": "body.username"
                              },
                              "key": {
                                "type": "string",
                                "example": "username"
                              }
                            }
                          }
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 429
                    },
                    "message": {
                      "type": "string",
                      "example": "Too many registration attempts from this device. Please wait for 1 day before trying again."
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh Access Token",
        "description": "This route is for refreshing the access token.",
        "responses": {
          "200": {
            "description": "Successfully issued new access token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "sample token"
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully issued new access token."
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "You are unauthenticated."
                    },
                    "name": {
                      "type": "string",
                      "example": "UnauthenticatedError"
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many request attempts to refresh access token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 429
                    },
                    "message": {
                      "type": "string",
                      "example": "Too many request attempts to refresh access token, please wait for 1 hour to refresh your access token."
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-out": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sign Out",
        "description": "This route is for logging out from the account.",
        "responses": {
          "200": {
            "description": "Successfully signed out from account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null"
                    },
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully signed out from account."
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "You are unauthenticated."
                    },
                    "name": {
                      "type": "string",
                      "example": "UnauthenticatedError"
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Forgot Password",
        "description": "This route is for sending an email to reset the password.",
        "responses": {
          "200": {
            "description": "If a matching email is found and already verified, a password reset link will be sent to your email address.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "If a matching email is found and already verified, a password reset link will be sent to your email address. Please check your inbox and follow the instructions to reset your password."
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "\"body.email\" must be a valid email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "\"body.email\" must be a valid email."
                    },
                    "name": {
                      "type": "string",
                      "example": "ValidationError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "\"body.email\" must be a valid email."
                          },
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "body",
                              "description": "Path to the error field."
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "string.email"
                          },
                          "context": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "string",
                                "example": "abdmanharits@gmail.comlplap",
                                "description": "The value that failed validation."
                              },
                              "invalids": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "abdmanharits@gmail.comlplap",
                                  "description": "The list of invalid values."
                                }
                              },
                              "label": {
                                "type": "string",
                                "example": "body.email",
                                "description": "A human-readable identifier for the invalid value."
                              },
                              "key": {
                                "type": "string",
                                "example": "email",
                                "description": "The object key corresponding to the invalid value."
                              }
                            }
                          }
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password/{token}": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset Password",
        "description": "This route is for resetting the password.",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "Token for password reset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Password successfully changed, please sign in again to your account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 204
                    },
                    "message": {
                      "type": "string",
                      "example": "Password reset successfully."
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token."
                    },
                    "name": {
                      "type": "string",
                      "example": "RequestError"
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "photoProfile": {
            "type": "string"
          },
          "coverPicture": {
            "type": "string"
          },
          "_count": {
            "type": "object",
            "properties": {
              "followers": {
                "type": "integer"
              },
              "following": {
                "type": "integer"
              }
            }
          }
        }
      },
      "ValidationErrorResponse": {
        "allOf": [
          { "$ref": "#/components/schemas/Response" },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        ]
      },
      "PagingResponse": {
        "allOf": [
          { "$ref": "#/components/schemas/Response" },
          {
            "type": "object",
            "properties": {
              "meta": {
                "type": "object",
                "properties": {
                  "resultCount": { "type": "integer" },
                  "totalRecords": { "type": "integer" },
                  "next": { "type": "string" },
                  "prev": { "type": "string" },
                  "current": { "type": "string" },
                  "hasNextPage": { "type": "boolean" }
                }
              }
            }
          }
        ]
      },
      "Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "CreateThreadDTO": {
        "type": "object",
        "properties": {
          "content": { "type": "string" },
          "images": {
            "type": "file",
            "description": "Can be a multiple files."
          }
        }
      },
      "Thread": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "_count": {
            "type": "object",
            "properties": {
              "replies": {
                "type": "integer"
              },
              "likes": {
                "type": "integer"
              }
            }
          },
          "content": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorId": {
            "type": "integer"
          },
          "isLiked": {
            "type": "boolean"
          },
          "author": { "$ref": "#/components/schemas/User" }
        }
      },
      "ThreadPagingResponse": {
        "allOf": [
          { "$ref": "#/components/schemas/PagingResponse" },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Thread" }
              }
            }
          }
        ]
      }
    }
  }
}
